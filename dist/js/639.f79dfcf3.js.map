{"version":3,"file":"js/639.f79dfcf3.js","mappings":"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","sources":["webpack://project/./src/view/Home/DiscoveringMusic/singingListDetails.vue","webpack://project/src/view/Home/DiscoveringMusic/singingListDetails.vue","webpack://project/./src/view/Home/DiscoveringMusic/singingListDetails.vue?17e5","webpack://project/./src/view/Home/DiscoveringMusic/singingListDetails.vue?9ba0"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"top\"},[_c('div',{staticClass:\"box\"},[_c('div',{staticClass:\"left\"},[_c('img',{attrs:{\"src\":_vm.playlist.coverImgUrl}})]),_c('div',{staticClass:\"right\"},[_c('div',{staticClass:\"songSheet\"},[_c('i',[_vm._v(\"歌单\")]),_c('h3',[_vm._v(_vm._s(this.playlist.name))])]),_c('div',{staticClass:\"author\"},[_c('img',{attrs:{\"src\":_vm.avatarUrl}}),_c('span',[_vm._v(_vm._s(_vm.nickname))])]),_c('div',{staticClass:\"nav\"},[_c('span',[_vm._v(\"标签:\")]),_c('ul',_vm._l((_vm.tags),function(tag,index){return _c('li',{key:index},[_c('i',[_vm._v(_vm._s(tag))])])}),0)]),_c('div',{staticClass:\"introduce\"},[_c('span',[_vm._v(\"介绍： \"),_c('p',[_vm._v(_vm._s(_vm.playlist.description))])])])])]),_c('div',{staticClass:\"center\"},[_c('h2',[_vm._v(\"歌曲列表\")]),_c('span',[_vm._v(_vm._s(_vm.sum)+\"首歌\")]),_c('p',[_vm._v(\" 播放:\"),_c('i',[_vm._v(_vm._s(_vm.play))]),_vm._v(\"次 \")])]),_c('el-table',{staticClass:\"elTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.songs},on:{\"cell-click\":_vm.getMusicId}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"width\":\"100%\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"歌曲标题\",\"width\":\"300%\"}}),_c('el-table-column',{attrs:{\"prop\":\"dt\",\"label\":\"时长\",\"width\":\"150%\"}}),_c('el-table-column',{attrs:{\"prop\":\"ar[0].name\",\"label\":\"歌手\",\"width\":\"300%\"}}),_c('el-table-column',{attrs:{\"prop\":\"al.name\",\"label\":\"专辑\",\"width\":\"300%\"}})],1),_c('el-pagination',{staticClass:\"pagination\",attrs:{\"page-size\":_vm.limit,\"pager-count\":9,\"layout\":\"prev, pager, next\",\"total\":_vm.sum || 0},on:{\"current-change\":_vm.changeSize}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"top\">\r\n    <div class=\"box\">\r\n      <div class=\"left\">\r\n        <img :src=\"playlist.coverImgUrl\" />\r\n      </div>\r\n      <div class=\"right\">\r\n        <div class=\"songSheet\">\r\n          <i>歌单</i>\r\n          <h3>{{ this.playlist.name }}</h3>\r\n        </div>\r\n        <div class=\"author\">\r\n          <img :src=\"avatarUrl\" />\r\n          <span>{{ nickname }}</span>\r\n        </div>\r\n        <div class=\"nav\">\r\n          <span>标签:</span>\r\n          <ul>\r\n            <li v-for=\"(tag, index) in tags\" :key=\"index\">\r\n              <i>{{ tag }}</i>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"introduce\">\r\n          <span\r\n            >介绍：\r\n            <p>{{ playlist.description }}</p></span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"center\">\r\n      <h2>歌曲列表</h2>\r\n      <span>{{ sum }}首歌</span>\r\n      <p>\r\n        播放:<i>{{ play }}</i\r\n        >次\r\n      </p>\r\n    </div>\r\n    <el-table\r\n      style=\"width: 100%\"\r\n      :data=\"songs\"\r\n      class=\"elTable\"\r\n      @cell-click=\"getMusicId\"\r\n    >\r\n      <el-table-column type=\"index\" width=\"100%\" align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"name\" label=\"歌曲标题\" width=\"300%\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"dt\" label=\"时长\" width=\"150%\"> </el-table-column>\r\n      <el-table-column prop=\"ar[0].name\" label=\"歌手\" width=\"300%\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"al.name\" label=\"专辑\" width=\"300%\">\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n      :page-size=\"limit\"\r\n      :pager-count=\"9\"\r\n      layout=\"prev, pager, next\"\r\n      :total=\"sum || 0\"\r\n      class=\"pagination\"\r\n      @current-change=\"changeSize\"\r\n    >\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"singingListDetails\",\r\n  data() {\r\n    return {\r\n      singingListId: \"\",\r\n      playlist: {},\r\n      avatarUrl: \"\",\r\n      nickname: \"\",\r\n      tags: [],\r\n      songs: [],\r\n      limit: 10,\r\n      offset: 1,\r\n      currentPage: 0,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.singingListId = this.$route.query.id;\r\n    let { limit, singingListId, currentPage } = this;\r\n    this.getDetail(singingListId);\r\n    this.getTrackAll(singingListId, limit, currentPage);\r\n  },\r\n  methods: {\r\n    async getDetail(id) {\r\n      let result = await this.$API.reqDetail(id);\r\n      if (result.data.code === 200) {\r\n        this.playlist = result.data.playlist;\r\n        this.avatarUrl = this.playlist.creator.avatarUrl;\r\n        this.nickname = this.playlist.creator.nickname;\r\n        this.tags = this.playlist.tags;\r\n      }\r\n    },\r\n    async getTrackAll(id, limit, currentPage) {\r\n      let result = await this.$API.reqTrack(id, limit, currentPage);\r\n      if (result.data.code === 200) {\r\n        this.songs = result.data.songs;\r\n        this.songs.forEach((element, index) => {\r\n          let m = parseInt(element.dt / 1000 / 60);\r\n          let s = parseInt(\r\n            [element.dt / 1000 / 60 - parseInt(element.dt / 1000 / 60)] * 60\r\n          );\r\n          s = s < 10 ? \"0\" + s : s;\r\n          this.songs[index].dt = `${m}分${s}秒`;\r\n        });\r\n      }\r\n    },\r\n    changeSize(page) {\r\n      let { limit, singingListId, currentPage } = this;\r\n      currentPage = (page - this.offset) * 10;\r\n      this.getTrackAll(singingListId, limit, currentPage);\r\n    },\r\n    getMusicId(data) {\r\n      let id = data.id;\r\n      this.$bus.$emit(\"musicId\", id);\r\n    },\r\n  },\r\n  computed: {\r\n    sum() {\r\n      return this.playlist.trackCount;\r\n    },\r\n    play() {\r\n      return this.playlist.playCount;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box {\r\n  display: flex;\r\n}\r\n.left img {\r\n  border: 2px solid #ccc;\r\n  margin-right: 50px;\r\n  width: 208px;\r\n  height: 208px;\r\n}\r\n.songSheet i {\r\n  display: inline-block;\r\n  width: 40px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  background-color: #d61c1c;\r\n  margin-right: 10px;\r\n  color: wheat;\r\n}\r\n.box h3 {\r\n  display: inline-block;\r\n}\r\n.author {\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n}\r\n.author img {\r\n  width: 35px;\r\n  height: 35px;\r\n}\r\n.author span {\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n  color: #0c73c2;\r\n  line-height: 35px;\r\n}\r\n.right {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.nav {\r\n  margin-top: 5px;\r\n  display: flex;\r\n}\r\n.nav ul {\r\n  flex: 1;\r\n  padding: 0;\r\n  margin: 0;\r\n  /* display: flex; */\r\n}\r\n.nav ul li {\r\n  float: left;\r\n  /* width: 44px; */\r\n  border-radius: 44px;\r\n  text-align: center;\r\n  padding: 0;\r\n  margin: 0 5px;\r\n  font-size: 14px;\r\n  background-color: #e7e5e5;\r\n}\r\n.nav ul li i {\r\n  font-style: normal;\r\n  padding: 0 10px;\r\n}\r\n.nav span {\r\n  font-size: 14px;\r\n  color: #5d5b5b;\r\n}\r\n.introduce {\r\n  margin-top: 20px;\r\n}\r\n.introduce span {\r\n  font-size: 14px;\r\n  color: #5d5b5b;\r\n}\r\n.introduce p {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  padding-right: 30px;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n}\r\n.elTable {\r\n  font-size: 14px;\r\n  color: black;\r\n}\r\n.center {\r\n  display: flex;\r\n}\r\n.center span {\r\n  line-height: 72px;\r\n  font-size: 14px;\r\n  margin-left: 20px;\r\n  color: #666;\r\n}\r\n.center p {\r\n  font-size: 14px;\r\n  line-height: 45px;\r\n  margin-left: 800px;\r\n}\r\n.center p i {\r\n  font-style: normal;\r\n  color: #c20c0c;\r\n  margin: 0 5px;\r\n  font-weight: 700;\r\n}\r\naudio {\r\n  position: relative;\r\n  bottom: 0;\r\n  width: 100%;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./singingListDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./singingListDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./singingListDetails.vue?vue&type=template&id=bc7fffd0&scoped=true&\"\nimport script from \"./singingListDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./singingListDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./singingListDetails.vue?vue&type=style&index=0&id=bc7fffd0&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bc7fffd0\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","playlist","coverImgUrl","_v","_s","name","avatarUrl","nickname","_l","tags","tag","index","key","description","sum","play","staticStyle","songs","on","getMusicId","limit","changeSize","staticRenderFns","data","singingListId","offset","currentPage","mounted","$route","query","id","getDetail","getTrackAll","methods","result","$API","reqDetail","code","creator","reqTrack","forEach","element","m","parseInt","dt","s","page","$bus","$emit","computed","trackCount","playCount","component"],"sourceRoot":""}