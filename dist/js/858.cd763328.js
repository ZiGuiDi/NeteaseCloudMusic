"use strict";(self["webpackChunkproject"]=self["webpackChunkproject"]||[]).push([[858],{7858:function(t,e,s){s.r(e),s.d(e,{default:function(){return c}});var a=function(){var t=this,e=t._self._c;return e("div",{staticClass:"box"},[e("div",{staticClass:"center"},[e("h2",[t._v("歌曲列表")]),e("span",[t._v(t._s(t.sum)+"首歌")])]),e("el-table",{staticStyle:{width:"100%"},attrs:{data:t.result.songs},on:{"cell-click":t.getMusicId}},[e("el-table-column",{attrs:{prop:"name",label:"歌曲名",width:"width"}}),e("el-table-column",{attrs:{prop:"dt",label:"时长",width:"150%"}}),e("el-table-column",{attrs:{prop:"ar[0].name",label:"歌手",width:"300%"}}),e("el-table-column",{attrs:{prop:"al.name",label:"专辑",width:"300%"}})],1),e("el-pagination",{staticClass:"pagination",attrs:{"page-size":t.limit,"pager-count":9,layout:"prev, pager, next",total:t.sum||0},on:{"current-change":t.changeSize}})],1)},i=[],r={name:"Search",data(){return{result:[],limit:10,offset:1,currentPage:0,musicName:"",keywords:""}},mounted(){let{limit:t,currentPage:e}=this;this.getSearchList(t,e),this.$bus.$on("getMusic",this.getQuery)},methods:{getQuery(){let{limit:t,currentPage:e}=this;this.getSearchList(t,e)},async getSearchList(t,e){let s=Date.parse(new Date);this.musicName=this.$route.query.keywords;let a=await this.$API.reqSearch(this.musicName,t,e,s);200===a.data.code&&(this.result=a.data.result,a.data.result.songs.forEach(((t,e)=>{let s=parseInt(t.dt/1e3/60),a=parseInt(60*[t.dt/1e3/60-parseInt(t.dt/1e3/60)]);a=a<10?"0"+a:a,this.result.songs[e].dt=`${s}分${a}秒`})))},getMusicId(t){let e=t.id;this.$bus.$emit("musicId",e)},changeSize(t){let{limit:e,currentPage:s}=this;s=10*(t-this.offset),this.getSearchList(e,s)}},computed:{sum(){return this.result.songCount}}},l=r,n=s(1001),u=(0,n.Z)(l,a,i,!1,null,null,null),c=u.exports}}]);
//# sourceMappingURL=858.cd763328.js.map