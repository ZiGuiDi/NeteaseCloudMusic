"use strict";(self["webpackChunkproject"]=self["webpackChunkproject"]||[]).push([[748],{7748:function(t,e,i){i.r(e),i.d(e,{default:function(){return u}});var s=function(){var t=this,e=t._self._c;return e("div",[e("h1",[t._v("我的喜欢")]),e("el-table",{staticStyle:{width:"100%"},attrs:{data:t.songs},on:{"cell-click":t.getMusicId}},[e("el-table-column",{attrs:{prop:"name",label:"歌曲名",width:"width"}}),e("el-table-column",{attrs:{prop:"dt",label:"时长",width:"150%"}}),e("el-table-column",{attrs:{prop:"ar[0].name",label:"歌手",width:"300%"}}),e("el-table-column",{attrs:{prop:"al.name",label:"专辑",width:"300%"}})],1),e("el-pagination",{staticClass:"pagination",attrs:{"page-size":t.limit,"pager-count":9,layout:"prev, pager, next",total:t.sum||0},on:{"current-change":t.changeSize}})],1)},a=[],l={name:"myCollection",data(){return{songs:[],limit:10,offset:1,currentPage:0,uid:"",sum:""}},mounted(){this.$bus.$on("emitUid",this.getUid),this.getLikeList()},methods:{async getUserDetail(t){let e=await this.$API.reqUserDetail(t),i=e.data.playlist[0].id,s=await this.$API.reqTrack(i,this.limit,this.currentPage);this.songs=s.data.songs,this.songs.forEach(((t,e)=>{let i=parseInt(t.dt/1e3/60),s=parseInt(60*[t.dt/1e3/60-parseInt(t.dt/1e3/60)]);s=s<10?"0"+s:s,this.songs[e].dt=`${i}分${s}秒`}))},getUid(t){this.getUserDetail(t),this.uid=t},changeSize(t){this.currentPage=10*(t-this.offset),this.getUserDetail(this.uid)},getMusicId(t){let e=t.id;this.$bus.$emit("musicId",e)},async getLikeList(){setTimeout((async()=>{let t=await this.$API.reqLikeList(this.uid);this.sum=t.data.ids.length}),500)}}},n=l,r=i(1001),h=(0,r.Z)(n,s,a,!1,null,"2bb5924c",null),u=h.exports}}]);
//# sourceMappingURL=748.d4f898ad.js.map